task:
  name: DetectionTask
  params:
    backbone_name: resnet50
    backbone_params:
      in_chans: &num_channels 3
      pretrained: true
    neck_name: FPN
    neck_params:
      in_channels: [256, 512, 1024, 2048]
      out_channels: 256
      start_level: 1
      add_extra_convs: 'on_input'
      num_outs: 5
    head_name: RetinaHead
    head_params:
      in_features: 256
      num_classes: &num_classes 1
      num_base_priors: 9
      stacked_convs: 4
      feat_channels: 256
    hat_name: RetinaHat
    hat_params:
      anchor_gen_params:
        strides: [8, 16, 32, 64, 128]
        ratios: [0.5, 1.0, 2.0]
        octave_base_scale: 4
        scales_per_octave: 3
      bbox_decoder_params:
        clip_border: true
        target_means: [.0, .0, .0, .0]
        target_stds: [1.0, 1.0, 1.0, 1.0]
      assigner_params:
        pos_iou_thr: 0.5
        neg_iou_thr: 0.4
        min_pos_iou: .0
        ignore_iof_thr: -1
      num_classes: *num_classes
      reg_decoded_bbox: false
      max_bbox_det_per_img: 100
      nms_thresh: 0.5
    input_size: [*num_channels, &height 600, &width 600]

loss:
  loss_list:
    - name: FocalLoss
      params:
        gamma: 2.0
        alpha: 0.25
        target_fields:
          target: labels
          input: cls_score
    - name: L1Loss
      params:
        target_fields:
          target: bbox_targets
          input: bbox_pred

optimizers:
  name: SGD
  params:
    lr: &initial_lr 0.01
    momentum: 0.9
    weight_decay: 0.0001

schedulers:
  name: OneCycleLR
  params:
    epochs: 100
    steps_per_epoch: 7306
    max_lr: *initial_lr
    pct_start: 0.3
  aux_params:
    interval: 'step'

data:
  common_params:
    data_folder: "${SM_CHANNEL_TRAINING}"

  train_params:
    name: DetectionDataset
    dataloader_params: &dataloader_params
      batch_size: &batch_size 8
      num_workers: &num_workers 4
      shuffle: true
      drop_last: true
      use_custom_collate_fn: &use_custom_collate_fn true
    params:
      path_to_datalist: "train_without_neg0.csv"
    transform:
      - &normalize
        name: Normalize
        params:
          mean: [ 0.485, 0.456, 0.406 ]
          std: [ 0.229, 0.224, 0.225 ]
      - &totensor
        name: ToTensorV2

    augment:
      # TODO: check pad_shape, input_shape
      # TODO: debug with augs making bboxes out of image
#      - name: RandomResizedCrop
#        params:
#          height: *height
#          width: *width
#          scale: [0.8, 1.2]
#      - name: ColorJitter
#        params:
#          brightness: 0.4
#          contrast: 0.4
#          saturation: 0.4
#          hue: 0.1
#          p: 0.8
#      - name: GaussianBlur
#        params:
#          p: 0.5
      - name: HorizontalFlip

  valid_params: &valid_params
    name: DetectionDataset
    dataloader_params:
      batch_size: *batch_size
      num_workers: *num_workers
      shuffle: false
      drop_last: false
      use_custom_collate_fn: *use_custom_collate_fn
    params:
      path_to_datalist: "valid_without_neg0.csv"
    transform:
      - &resize
        name: Resize
        params:
          height: *height
          width: *width
      - *normalize
      - *totensor

  test_params: *valid_params

trainer:
  gpus: 1
  max_epochs: 100
#  limit_train_batches: 10
#  limit_val_batches: 10
  num_sanity_val_steps: 0
  progress_bar_refresh_rate: 10
  check_val_every_n_epoch: 1
  precision: 32

experiment_name: &experiment_name reef-vladvin
log_dir: '${SM_OUTPUT_DATA_DIR}/logs'

logger:
#  logger: tensorboard
  logger: mlflow
  experiment_name: *experiment_name
  tags:
    mlflow.runName: "retinanet_resnet50"
  save_dir: "s3://ml-competitions/mlruns"
  secrets_manager:
    region: "eu-west-1"
    mlflow_secret: "acme/ml-mlflow"

checkpoint:
  monitor: train/loss
  save_last: true
  mode: min
  save_top_k: 1

profiler:
  name: 'simple'
  save_profile: false

metrics:
  - name: MeanAveragePrecision
    phases: ['valid', 'test']
    params:
      nproc: 1
      num_classes: *num_classes
      iou_thr: 0.5
      target_fields:
        target: target
        prediction: prediction
